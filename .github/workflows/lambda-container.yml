name: lambda-container-deployment

on:
  push:
    branches:
      - master
  workflow_dispatch:
    inputs:
      action:
        description: 'Terraform action to perform'
        required: true
        default: 'apply'
        type: choice
        options:
          - apply
          - destroy

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    name: Docker Build + Terraform Apply/Destroy
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: web-app
      AWS_REGION: us-east-1

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials with OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::211125784755:role/uc1-alb-oidc
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Ensure ECR Repository Exists
        run: |
          aws ecr describe-repositories --repository-names "$IMAGE_NAME" || \
          aws ecr create-repository --repository-name "$IMAGE_NAME"

      - name: Build Docker image
        run: docker build -t $IMAGE_NAME -f ./src/Dockerfile ./src

      - name: Tag Docker image
        run: |
          ECR_REGISTRY=${{ steps.login-ecr.outputs.registry }}
          docker tag $IMAGE_NAME:latest $ECR_REGISTRY/$IMAGE_NAME:latest

      - name: Push Docker image to ECR
        run: |
          ECR_REGISTRY=${{ steps.login-ecr.outputs.registry }}
          docker push $ECR_REGISTRY/$IMAGE_NAME:latest

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate 
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan

      - name: Terraform Apply
        if: contains(github.event.head_commit.message, 'terraform apply') || (github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'apply')
        run: terraform apply -auto-approve

      - name: Terraform Destroy
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'destroy'
        run: terraform destroy -auto-approve
